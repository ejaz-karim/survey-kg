Then query those concatenated answers into dbpedia api
dbpedia will return keywords from the answer and information relating to those keywords
then need to put that information back into the .ttl file in the corresponding triple rdf type: answer

order:
query7.sparql using java -jar sparql-anything-0.8.1.jar -q query7.sparql -o survey7.ttl
data_extraction.py
this produces seeAlso.txt
//Right now this gets 601 lines, need to scale it as requests_api.py can only do one at a time (limitation of api)

requests_api.py
// this produces requests_output.txt
filter_requests_output.py
// This will leave only the relevant urls to filter_requests_output.txt




Do data_extraction.py
Gives 601 lines.
Iterate through 601 lines

data_iteration
Get every line into a tupule (as ordered, allows dupes, immutable etc.)
Iterate through this tupule
Each object will go through requests_api.py, filter_requests_output.py

Insert data from requests_output_filtered.txt into query7_modified.ttl
in order of tupule, and order of seeAlso in query7.sparql





dbr:hasResource <http://dbpedia.org/resource/Encyclopedia>

change api params

fix data_iteration.py